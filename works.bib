@unknown{rabino2018,
  author = {Rabino, N.},
  year = {2018},
  month = {01},
  pages = {},
  title = {Analysis and Qualitative Effects of Large Breasts on Aerodynamic Performance and Wake of a “Miss Kobayashi’s Dragon Maid” Character},
  doi = {10.13140/RG.2.2.30181.50404/1}
}

@INPROCEEDINGS{BVAvsEPvsRandom,
  author={Reid, S.C.},
  booktitle={Proceedings Fourth International Software Metrics Symposium}, 
  title={An empirical analysis of equivalence partitioning, boundary value analysis and random testing}, 
  year={1997},
  volume={},
  number={},
  pages={64-73},
  doi={10.1109/METRIC.1997.637166}
}

@misc{BibEntry2023Feb,
	title = {{Boundary Value Analysis and Equivalence Partitioning Testing}},
	journal = {Guru99},
	year = {2023},
	month = feb,
	note = {[Online; accessed 26. Mar. 2023]},
	url = {https://www.guru99.com/equivalence-partitioning-boundary-value-analysis.html}
}

@book{thebook, 
  title = {Paradigm Shift in Software Testing: Practical Guide for Developers and Testers}, 
  author = {Forgacs, Istvan and Kovacs, Attila}, 
  isbn = {9786150127811}, 
  year = {2022}, 
  publisher = {Independently Published} 
}

@book{Jorgensen2013-ih,
  title     = "Software testing",
  author    = "Jorgensen, Paul C",
  publisher = "Auerbach",
  edition   =  4,
  month     =  oct,
  year      =  2013,
  address   = "Philadelphia, PA",
  language  = "en"
}

@misc{feldt2019automated,
  title={Towards Automated Boundary Value Testing with Program Derivatives and Search}, 
  author={Robert Feldt and Felix Dobslaw},
  year={2019},
  eprint={1905.11198},
  archivePrefix={arXiv},
  primaryClass={cs.SE}
}

@article{coincidentalCorrecttness,
  author = {Hierons, R. M.},
  title = {Avoiding Coincidental Correctness in Boundary Value Analysis},
  year = {2006},
  issue_date = {July 2006},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {15},
  number = {3},
  issn = {1049-331X},
  url = {https://doi.org/10.1145/1151695.1151696},
  doi = {10.1145/1151695.1151696},
  abstract = {In partition analysis we divide the input domain to form subdomains on which the system's behaviour should be uniform. Boundary value analysis produces test inputs near each subdomain's boundaries to find failures caused by incorrect implementation of the boundaries. However, boundary value analysis can be adversely affected by coincidental correctness---the system produces the expected output, but for the wrong reason. This article shows how boundary value analysis can be adapted in order to reduce the likelihood of coincidental correctness. The main contribution is to cases of automated test data generation in which we cannot rely on the expertise of a tester.},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  month = {jul},
  pages = {227–241},
  numpages = {15},
  keywords = {boundary value analysis, coincidental correctness, domain faults, Test case generation}
}


@inproceedings{10.1007/978-3-642-15585-7_11,
	abstract = {The body of knowledge in the area of black-box unit testing is quite well established, e.g., the concepts of category partitioning, boundary value analysis, and pair-wise testing. However, tool support to apply the existing techniques in large-scale industrial software projects is fairly limited. Although tools such as HexaWise enable testers in automatic generation of all-combination pair-wise test input data, nevertheless converting them to actual test case source code (e.g., in NUnit) is both very tedious and also error prone. To address the above challenge, we have developed an open-source tool, referred to as AutoBBUT, for automated generation of black-box NUnit test cases for the C{\#} .Net platform. Evaluation of the tool in an industrial setting by using it to automatically generate more than 1,962 NUnit test cases (having 15,906 test line of code) in NUnit shows the effectiveness of the tool in saving testers a lot of time and also preventing unwanted defects and/or test smells in test code, which can occur due to manual test code development.},
	address = {Berlin, Heidelberg},
	author = {Wiederseiner, Christian and Jolly, Shahnewaz A. and Garousi, Vahid and Eskandar, Matt M.},
	booktitle = {Testing -- Practice and Research Techniques},
	editor = {Bottaci, Leonardo and Fraser, Gordon},
	isbn = {978-3-642-15585-7},
	pages = {118--128},
	publisher = {Springer Berlin Heidelberg},
	title = {An Open-Source Tool for Automated Generation of Black-Box xUnit Test Code and Its Industrial Evaluation},
	year = {2010}
}

@inproceedings{murnane2001effectiveness,
  title={On the effectiveness of mutation analysis as a black box testing technique},
  author={Murnane, Tafline and Reed, Karl},
  booktitle={Proceedings 2001 Australian Software Engineering Conference},
  pages={12--20},
  year={2001},
  organization={IEEE}
}

@article{nidhra2012black,
  title={Black box and white box testing techniques-a literature review},
  author={Nidhra, Srinivas and Dondeti, Jagruthi},
  journal={International Journal of Embedded Systems and Applications (IJESA)},
  volume={2},
  number={2},
  pages={29--50},
  year={2012}
}

@article{khan2012comparative,
  title={A comparative study of white box, black box and grey box testing techniques},
  author={Khan, Mohd Ehmer and Khan, Farmeena},
  journal={International Journal of Advanced Computer Science and Applications},
  volume={3},
  number={6},
  year={2012},
  publisher={Citeseer}
}

@article{FELLOWS200953,
	abstract = {Multiple-interval graphs are a natural generalization of interval graphs where each vertex may have more than one interval associated with it. Many applications of interval graphs also generalize to multiple-interval graphs, often allowing for more robustness in the modeling of the specific application. With this motivation in mind, a recent systematic study of optimization problems in multiple-interval graphs was initiated. In this sequel, we study multiple-interval graph problems from the perspective of parameterized complexity. The problems under consideration are k-Independent Set, k-Dominating Set, and k-Clique, which are all known to be W[1]-hard for general graphs, and NP-complete for multiple-interval graphs. We prove that k-Clique is in FPT, while k-Independent Set and k-Dominating Set are both W[1]-hard. We also prove that k-Independent Dominating Set, a hybrid of the two above problems, is also W[1]-hard. Our hardness results hold even when each vertex is associated with at most two intervals, and all intervals have unit length. Furthermore, as an interesting byproduct of our hardness results, we develop a useful technique for showing W[1]-hardness via a reduction from the k-Multicolored Clique problem, a variant of k-Clique. We believe this technique has interest in its own right, as it should help in simplifying W[1]-hardness results which are notoriously hard to construct and technically tedious.},
	author = {Michael R. Fellows and Danny Hermelin and Frances Rosamond and St{\'e}phane Vialette},
	doi = {https://doi.org/10.1016/j.tcs.2008.09.065},
	issn = {0304-3975},
	journal = {Theoretical Computer Science},
	keywords = {Multiple intervals, Independent set, Dominating set, Clique, W-hardness, Parameterized complexity, Multicolored clique},
	number = {1},
	pages = {53-61},
	title = {On the parameterized complexity of multiple-interval graph problems},
	url = {https://www.sciencedirect.com/science/article/pii/S0304397508007329},
	volume = {410},
	year = {2009},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0304397508007329},
	bdsk-url-2 = {https://doi.org/10.1016/j.tcs.2008.09.065}}

@MISC{stackexchangeMinimumPointCover,
  title = {Given a set of intervals on the real line, find a minimum set of points that 'cover' all the intervals},
  author = {dkaeae (https://cs.stackexchange.com/users/70382/dkaeae)},
  howpublished = {Computer Science Stack Exchange},
  note = {URL:https://cs.stackexchange.com/q/101911 (version: 2018-12-21)},
  eprint = {https://cs.stackexchange.com/q/101911},
  url = {https://cs.stackexchange.com/q/101911}
}

@inproceedings{godefroid2007random,
  title={Random testing for security: blackbox vs. whitebox fuzzing},
  author={Godefroid, Patrice},
  booktitle={Proceedings of the 2nd international workshop on Random testing: co-located with the 22nd IEEE/ACM International Conference on Automated Software Engineering (ASE 2007)},
  pages={1--1},
  year={2007}
}

@inproceedings{godefroid2008automated,
  title={Automated whitebox fuzz testing.},
  author={Godefroid, Patrice and Levin, Michael Y and Molnar, David A and others},
  booktitle={NDSS},
  volume={8},
  pages={151--166},
  year={2008}
}

@inproceedings{son2014test,
  title={Test case generation from cause-effect graph based on model transformation},
  author={Son, Hyun Seung and Kim, R Young Chul and Park, Young B},
  booktitle={2014 International Conference on Information Science \& Applications (ICISA)},
  pages={1--4},
  year={2014},
  organization={IEEE}
}

@article{Rao2009Jul,
	author = {Rao, Calyampudi Radhakrishna},
	title = {{Orthogonal arrays}},
	journal = {Scholarpedia},
	volume = {4},
	number = {7},
	pages = {9076},
	year = {2009},
	month = jul,
	issn = {1941-6016},
	doi = {10.4249/scholarpedia.9076}
}

