@article{SOKOLOVA2009427,
  title = {A systematic analysis of performance measures for classification tasks},
  journal = {Information Processing \& Management},
  volume = {45},
  number = {4},
  pages = {427-437},
  year = {2009},
  issn = {0306-4573},
  doi = {https://doi.org/10.1016/j.ipm.2009.03.002},
  url = {https://www.sciencedirect.com/science/article/pii/S0306457309000259},
  author = {Marina Sokolova and Guy Lapalme},
  keywords = {Performance evaluation, Machine Learning, Text classification},
  abstract = {This paper presents a systematic analysis of twenty four performance measures used in the complete spectrum of Machine Learning classification tasks, i.e., binary, multi-class, multi-labelled, and hierarchical. For each classification task, the study relates a set of changes in a confusion matrix to specific characteristics of data. Then the analysis concentrates on the type of changes to a confusion matrix that do not change a measure, therefore, preserve a classifier’s evaluation (measure invariance). The result is the measure invariance taxonomy with respect to all relevant label distribution changes in a classification problem. This formal analysis is supported by examples of applications where invariance properties of measures lead to a more reliable evaluation of classifiers. Text classification supplements the discussion with several case studies.}
}

@misc{KaggleDataset,
  url={https://www.kaggle.com/datasets/wannaphong/thai-romanization},
  title={Kaggle Thai Romanization machine learning training data},
  urldate = {2022-07-01},
} 

@INPROCEEDINGS{BVAvsEPvsRandom,
  author={Reid, S.C.},
  booktitle={Proceedings Fourth International Software Metrics Symposium}, 
  title={An empirical analysis of equivalence partitioning, boundary value analysis and random testing}, 
  year={1997},
  volume={},
  number={},
  pages={64-73},
  doi={10.1109/METRIC.1997.637166}
}

@misc{BibEntry2023Feb,
	title = {{Boundary Value Analysis and Equivalence Partitioning Testing}},
	journal = {Guru99},
	year = {2023},
	month = feb,
	note = {[Online; accessed 26. Mar. 2023]},
	url = {https://www.guru99.com/equivalence-partitioning-boundary-value-analysis.html}
}

@book{thebook, 
  title = {Paradigm Shift in Software Testing: Practical Guide for Developers and Testers}, 
  author = {Forgacs, Istvan and Kovacs, Attila}, 
  isbn = {9786150127811}, 
  year = {2022}, 
  publisher = {Independently Published} 
}

@book{Jorgensen2013-ih,
  title     = "Software testing",
  author    = "Jorgensen, Paul C",
  publisher = "Auerbach",
  edition   =  4,
  month     =  oct,
  year      =  2013,
  address   = "Philadelphia, PA",
  language  = "en"
}

@misc{feldt2019automated,
  title={Towards Automated Boundary Value Testing with Program Derivatives and Search}, 
  author={Robert Feldt and Felix Dobslaw},
  year={2019},
  eprint={1905.11198},
  archivePrefix={arXiv},
  primaryClass={cs.SE}
}

@article{coincidentalCorrecttness,
  author = {Hierons, R. M.},
  title = {Avoiding Coincidental Correctness in Boundary Value Analysis},
  year = {2006},
  issue_date = {July 2006},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {15},
  number = {3},
  issn = {1049-331X},
  url = {https://doi.org/10.1145/1151695.1151696},
  doi = {10.1145/1151695.1151696},
  abstract = {In partition analysis we divide the input domain to form subdomains on which the system's behaviour should be uniform. Boundary value analysis produces test inputs near each subdomain's boundaries to find failures caused by incorrect implementation of the boundaries. However, boundary value analysis can be adversely affected by coincidental correctness---the system produces the expected output, but for the wrong reason. This article shows how boundary value analysis can be adapted in order to reduce the likelihood of coincidental correctness. The main contribution is to cases of automated test data generation in which we cannot rely on the expertise of a tester.},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  month = {jul},
  pages = {227–241},
  numpages = {15},
  keywords = {boundary value analysis, coincidental correctness, domain faults, Test case generation}
}


@inproceedings{10.1007/978-3-642-15585-7_11,
	abstract = {The body of knowledge in the area of black-box unit testing is quite well established, e.g., the concepts of category partitioning, boundary value analysis, and pair-wise testing. However, tool support to apply the existing techniques in large-scale industrial software projects is fairly limited. Although tools such as HexaWise enable testers in automatic generation of all-combination pair-wise test input data, nevertheless converting them to actual test case source code (e.g., in NUnit) is both very tedious and also error prone. To address the above challenge, we have developed an open-source tool, referred to as AutoBBUT, for automated generation of black-box NUnit test cases for the C{\#} .Net platform. Evaluation of the tool in an industrial setting by using it to automatically generate more than 1,962 NUnit test cases (having 15,906 test line of code) in NUnit shows the effectiveness of the tool in saving testers a lot of time and also preventing unwanted defects and/or test smells in test code, which can occur due to manual test code development.},
	address = {Berlin, Heidelberg},
	author = {Wiederseiner, Christian and Jolly, Shahnewaz A. and Garousi, Vahid and Eskandar, Matt M.},
	booktitle = {Testing -- Practice and Research Techniques},
	editor = {Bottaci, Leonardo and Fraser, Gordon},
	isbn = {978-3-642-15585-7},
	pages = {118--128},
	publisher = {Springer Berlin Heidelberg},
	title = {An Open-Source Tool for Automated Generation of Black-Box xUnit Test Code and Its Industrial Evaluation},
	year = {2010}
}

